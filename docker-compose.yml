version: '3.9'

services:
  api:
    build: .
    dns: 8.8.8.8
    ports:
      - '3333:3333'
    volumes:
      - .:/app
      - /app/node_modules
    container_name: api
    networks:
      - my-network
    depends_on:
      - db
    environment:
      - APP_KEY=JFWXVaJ6JA_os9d9nXFlm0sYDza-Z_Wn
      - LOG_LEVEL=info
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3333
      - DB_CONNECTION=pg
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=adonis
      - DB_PASSWORD=secret
      - DB_DATABASE=adonis_app
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:17
    restart: always
    ports:
      - '5431:5432'
    container_name: db
    networks:
      - my-network
    command: ['postgres', '-c', 'listen_addresses=*']
    environment:
      POSTGRES_USER: adonis
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: adonis_app
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - '8080:8080'
    container_name: adminer
    networks:
      - my-network

  migrator:
    build:
      context: .
    container_name: migrator
    command: sh -c "node bin/console migration:run && node bin/console db:seed"
    depends_on:
      - db
    networks:
      - my-network

volumes:
  pgdata:

networks:
  my-network:
    driver: bridge
